get:
  tags:
    - Institutions
  operationId: ListInstitutions
  summary: List all institutions
  description: >-
    Get a paginated list of all the institutions currently supported by Belvo. By default, we return up to 100 results per page.
  parameters:
    - name: page
      required: false
      in: query
      description: A page number within the paginated result set.
      schema:
        type: integer
        format: int32
        example: 1
    - name: page_size
      required: false
      in: query
      description: |
        Indicates how many results to return per page. By default we return 100 results per page. 
    
        ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
      schema:
        type: integer
        format: int32
        default: 100
        minimum: 1
        maximum: 1000
        example: 100
    - name: country_code
      in: query
      description: Return institutions only for this two-letter country code.
      schema:
        type: string
        example: MX
    - name: country_code__in
      in: query
      description: Return institutions only for these two-letter country codes.
      schema:
        type: string
        example: CO,BR
    - name: display_name
      in: query
      description: Return institutions that partially match this display name.
      schema:
        type: string
        example: Erebor Bank
    - name: name
      in: query
      schema:
        type: string
    - name: name__in
      in: query
      description: Return institutions with one or more of these Belvo-designated names.
      schema:
        type: string
        example: erebor_br_retail,gotham_co_business
    - name: resources__allin
      in: query
      description: Return institutions that support these resources.
      schema:
        type: string
        example: ACCOUNTS,OWNERS,TRANSACTIONS
    - name: status
      in: query
      description: Return institutions with the given status. You can choose between `healthy` or `down`.
      schema:
        type: string
        example: healthy
    - name: status__in
      in: query
      description: Return institutions with one of the given statuses. You can choose between `healthy` or `down`.
      schema:
        type: string
        example: healthy,down
    - name: type
      in: query
      description: Return institutions of this type. You can choose between `bank` or `fiscal`.
      schema:
        type: string
        example: fiscal
    - name: type__in
      in: query
      description: Return institutions of one of these types. You can choose between `bank` or `fiscal`.
      schema:
        type: string
        example: fiscal,bank
    - name: website
      in: query
      description: Return institutions with this website URL.
      schema:
        type: string
        example: https://www.erebor.mx
  responses:
    '200':
      description: Ok
      content:
        application/json:
          schema:
            $ref: ../components/responses/InstitutionsPaginatedResponse.yaml
    '401':
      description: Authentication to Belvo API failed
      content:
        application/json:
          schema:
            type: array
            description: >-
              This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).
            items:
              $ref: ../components/errors/UnauthorizedError.yaml
  x-readme:
    code-samples:
      - language: cURL
        code: |
          curl https://sandbox.belvo.com/api/institutions/  \
            -u [Secret Key ID]:[Secret Key PASSWORD]
      - language: python
        name: Belvo Python SDK
        code: |
          # check our python-client library on github
          # https://github.com/belvo-finance/belvo-python
          from pprint import pprint
          from belvo.client import Client

          # Login to Belvo API
          client = Client("Secret Key ID", "Secret Key PASSWORD", "sandbox")

          # List institutions
          for institution in client.Institutions.list():
              pprint(institution)
      - language: ruby
        name: Belvo Ruby SDK
        code: |
          # check our Ruby gem on github
          # https://github.com/belvo-finance/belvo-ruby
          require 'belvo'

          sandbox = Belvo::Client.new(
            'Secret Key ID',
            'Secret Key PASSWORD',
            'sandbox'
          )

          sandbox.institutions.list
      - language: node
        name: Belvo Node SDK
        code: |
          // check our node package on github
          // https://github.com/belvo-finance/belvo-js

          var belvo = require('belvo').default;

          var client = new belvo(
            'Secret Key ID',
            'Secret Key PASSWORD',
            'sandbox'
          );

          client.connect()
            .then(function () {
              client.institutions.list()
                .then(function (res) {
                  console.log(res);
                })
                .catch(function (error) {
                  console.log(error);
                });
          });
