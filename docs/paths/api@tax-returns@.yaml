get:
  tags:
    - Tax returns
  operationId: ListTaxReturns
  summary: List all tax returns
  description: >-
    Get a paginated list of all existing tax returns in your Belvo account. By default, we return up to 100 results per page. The results will include a mix of both
    monthly and yearly tax returns.
  parameters:
    - name: page
      required: false
      in: query
      description: A page number within the paginated result set.
      schema:
        type: integer
        format: int32
        example: 1
    - name: page_size
      required: false
      in: query
      description: |
        Indicates how many results to return per page. By default we return 100 results per page. 
    
        ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
      schema:
        type: integer
        format: int32
        default: 100
        minimum: 1
        maximum: 1000
        example: 100
    - name: link
      in: query
      description: |
        The `link.id` you want to filter by.

        ℹ️ We highly recommend adding the `link.id` filter in order to improve your performance.
      schema:
        type: string
        format: uuid
        example: 8848bd0c-9c7e-4f53-a732-ec896b11d4c4
    - name: created_at__gt
      in: query
      description: Return tax returns that were last updated in Belvo's database after this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).
      schema:
        type: string
        example: 2022-05-05
    - name: created_at__gte
      in: query
      description: Return tax returns that were last updated in Belvo's database after or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).
      schema:
        type: string
        example: 2022-05-04
    - name: created_at__lt
      in: query
      description: Return tax returns that were last updated in Belvo's database before this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).
      schema:
        type: string
        example: 2022-04-01
    - name: created_at__lte
      in: query
      description: Return tax returns that were last updated in Belvo's database before or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).
      schema:
        type: string
        example: 2022-03-30
    - name: created_at__range
      in: query
      description: Return tax returns that were last updated in Belvo's database between two dates (`YYYY-MM-DD` or full `ISO-8601` timestamp).
      schema:
        type: string
        example: 2022-03-03,2022-05-04
    - name: id
      in: query
      description: Return information for this `tax-return.id`.
      schema:
        type: string
        example: eb42c21c-2d9e-4dc1-89b8-9401d4beca73
    - name: id__in
      in: query
      description: Return information for these `tax-return.id`s.
      schema:
        type: string
        example: eb42c21c-2d9e-4dc1-89b8-9401d4beca73,82b3f18c-055b-4f82-9fae-d2201815ab0c
    - name: informacion_general__ejercicio
      in: query
      description: Return tax returns for exactly this year (`YYYY`).
      schema:
        type: string
        example: 2018
    - name: informacion_general__ejercicio__lt
      in: query
      description: Return tax returns for before this year (`YYYY`).
      schema:
        type: string
        example: 2020
    - name: informacion_general__ejercicio__lte
      in: query
      description: Return tax returns for this year and earlier (`YYYY`).
      schema:
        type: string
        example: 2021
    - name: informacion_general__ejercicio__gt
      in: query
      description: Return tax returns for after this year (`YYYY`).
      schema:
        type: string
        example: 2019
    - name: informacion_general__ejercicio__gte
      in: query
      description: Return tax returns for this year or later (`YYYY`).
      schema:
        type: string
        example: 2017
    - name: informacion_general__ejercicio__range
      in: query
      description: Return tax returns for this range of years (`YYYY`).
      schema:
        type: string
        example: 2015,2021
    - name: informacion_general__tipo_declaracion
      in: query
      description: Return tax returns with this declaration type.
      schema:
        type: string
        example: Normal
    - name: informacion_general__tipo_declaracion__in
      in: query
      description: Return tax returns with these declaration types.
      schema:
        type: string
        example: Normal,Commercial
    - name: link__in
      in: query
      description: Return information for these `link.id`s.
      schema:
        type: string
        example: 8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65
  responses:
    '200':
      description: Ok
      content:
        application/json:
          schema:
            oneOf: 
              - $ref: ../components/responses/TaxReturnsPersonalPaginated.yaml
              - $ref: ../components/responses/TaxReturnsPersonalMonthlyPaginated.yaml
              - $ref: ../components/responses/TaxReturnsBusinessPaginated.yaml
              - $ref: ../components/responses/TaxReturnsBusinessMonthlyPaginated.yaml
          examples:
            TaxReturnPersonal:
              $ref: ../components/examples/TaxReturnPersonalListPaginated.yaml
            TaxReturnPersonalMonthlyPFAE:
              $ref: ../components/examples/TaxReturnPersonalListMonthlyPaginatedPFAE.yaml
            TaxReturnPersonalMonthlyPFAI:
              $ref: ../components/examples/TaxReturnPersonalListMonthlyPaginatedPFAI.yaml
            TaxReturnBusiness:
              $ref: ../components/examples/TaxReturnBusinessListPaginated.yaml
            TaxReturnBusinessMonthly:
              $ref: >-
                ../components/examples/TaxReturnBusinessListMonthlyPaginated.yaml
    '401':
      description: Authentication to Belvo API failed
      content:
        application/json:
          schema:
            type: array
            description: >-
              This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).
            items:
              $ref: ../components/errors/UnauthorizedError.yaml
  x-readme:
    code-samples:
      - language: cURL
        code: |
          curl https://sandbox.belvo.com/api/tax-returns/ \
            -u [Secret Key ID]:[Secret Key PASSWORD]
      - language: python
        name: Belvo Python SDK
        code: |
          # check our python-client library on github
          # https://github.com/belvo-finance/belvo-python
          from pprint import pprint
          from belvo.client import Client

          # Login to Belvo API
          client = Client("Secret Key ID", "Secret Key PASSWORD", "sandbox")

          # List tax returns
          for tax_return in client.TaxReturns.list()
            pprint(tax_return)
      - language: ruby
        name: Belvo Ruby SDK
        code: |
          # check our Ruby gem on github
          # https://github.com/belvo-finance/belvo-ruby
          require 'belvo'

          sandbox = Belvo::Client.new(
            'Secret Key ID',
            'Secret Key PASSWORD',
            'sandbox'
          )

          sandbox.tax_returns.list
      - language: node
        name: Belvo Node SDK
        code: |
          // check our node package on github
          // https://github.com/belvo-finance/belvo-js

          var belvo = require('belvo').default;

          var client = new belvo(
            'Secret Key ID',
            'Secret Key PASSWORD',
            'sandbox'
          );

          client.connect()
            .then(function () {
              client.taxReturns.list()
                .then(function (res) {
                  console.log(res);
                })
                .catch(function (error) {
                  console.log(error);
                });
          });
post:
  tags:
    - Tax returns
  operationId: RetrieveTaxReturns
  summary: Retrieve tax returns for a link
  description: Retrieve tax return information for a specific fiscal link.
  requestBody:
    required: true
    content:
      application/json:
        schema:
          # $ref: ../components/requestBodies/TaxReturnsMonthlyRequest.yaml
          oneOf:
            - $ref: ../components/requestBodies/TaxReturnsMonthlyRequest.yaml
            - $ref: ../components/requestBodies/TaxReturnsYearlyRequest.yaml
  responses:
    '200':
      description: Ok (when `save_data=false`)
      content:
        application/json:
          schema:
            type: array
            items:
              oneOf:
                - $ref: ../components/schemas/tax_returns/TaxReturnPersonal.yaml
                - $ref: ../components/schemas/tax_returns/TaxReturnPersonalMonthly.yaml
                - $ref: ../components/schemas/tax_returns/TaxReturnBusiness.yaml
                - $ref: ../components/schemas/tax_returns/TaxReturnBusinessMonthly.yaml
          examples:
            TaxReturnPersonal:
              $ref: ../components/examples/TaxReturnPersonalList.yaml
            TaxReturnPersonalMonthlyPFAE:
              $ref: ../components/examples/TaxReturnPersonalListMonthlyPFAE.yaml
            TaxReturnPersonalMonthlyPFAI:
              $ref: ../components/examples/TaxReturnPersonalListMonthlyPFAI.yaml
            TaxReturnBusiness:
              $ref: ../components/examples/TaxReturnBusinessList.yaml
            TaxReturnBusinessMonthly:
              $ref: ../components/examples/TaxReturnBusinessListMonthly.yaml
    '201':
      description: Created (when `save_data=true`)
      content:
        application/json:
          schema:
            type: array
            items:
              oneOf:
                - $ref: ../components/schemas/tax_returns/TaxReturnPersonal.yaml
                - $ref: ../components/schemas/tax_returns/TaxReturnPersonalMonthly.yaml
                - $ref: ../components/schemas/tax_returns/TaxReturnBusiness.yaml
                - $ref: ../components/schemas/tax_returns/TaxReturnBusinessMonthly.yaml
          examples:
            TaxReturnPersonal:
              $ref: ../components/examples/TaxReturnPersonalList.yaml
            TaxReturnPersonalMonthlyPFAE:
              $ref: ../components/examples/TaxReturnPersonalListMonthlyPFAE.yaml
            TaxReturnPersonalMonthlyPFAI:
              $ref: ../components/examples/TaxReturnPersonalListMonthlyPFAI.yaml
            TaxReturnBusiness:
              $ref: ../components/examples/TaxReturnBusinessList.yaml
            TaxReturnBusinessMonthly:
              $ref: ../components/examples/TaxReturnBusinessListMonthly.yaml
    '400':
      description: Bad request error
      content:
        application/json:
          schema:
            type: array
            items:
              anyOf:
              - $ref: ../components/errors/TooManySessionsError.yaml
              - $ref: ../components/errors/SessionExpiredError.yaml
              - $ref: ../components/errors/ValidationError.yaml
              - $ref: ../components/errors/InstitutionDownError.yaml
              - $ref: ../components/errors/InstitutionUnavailableError.yaml
              - $ref: ../components/errors/InstitutionInactiveError.yaml
              - $ref: ../components/errors/UnsupportedOperationError.yaml
              - $ref: ../components/errors/InvalidLinkError.yaml
              - $ref: ../components/errors/UnconfirmedLinkError.yaml
    '401':
      description: Authentication to Belvo API failed
      content:
        application/json:
          schema:
            type: array
            description: >-
              This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).
            items:
              $ref: ../components/errors/UnauthorizedError.yaml
    '408':
      description: Request Timeout
      content:
        application/json:
          schema:
            $ref: ../components/errors/RequestTimeoutError.yaml
    '500':
      description: Unexpected Error
      content:
        application/json:
          schema:
            type: array
            title: Unexpected Error
            description: >-
              This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.
                
            items:
              $ref: ../components/errors/UnexpectedError.yaml
  x-readme:
    code-samples:
      - language: cURL
        code: |-
          ### Yearly Tax Returns
          curl -X POST \
            https://sandbox.belvo.com/api/tax-returns/ \
            -H 'Content-Type: application/json' \
            -H 'Host: sandbox.belvo.com' \
            -H 'cache-control: no-cache' \
            -d '{
              "link": "",
              "year_from": YYYY,
              "year_to": YYYY,
              "attach_pdf": false
          }' \
            -u [Secret Key ID]:[Secret Key PASSWORD]

          ### Monthly Tax Returns
          curl -X POST \
            https://sandbox.belvo.com/api/tax-returns/ \
            -H 'Content-Type: application/json' \
            -H 'Host: sandbox.belvo.com' \
            -H 'cache-control: no-cache' \
            -d '{
              "link": "",
              "date_from": "2019-01-01",
              "date_to": "2019-04-01",
              "type": "monthly",
              "attach_pdf": false
          }' \
            -u [Secret Key ID]:[Secret Key PASSWORD]
      - language: python
        name: Belvo Python SDK
        code: |-
          # check our python-client library on github
          # https://github.com/belvo-finance/belvo-python
          from belvo.client import Client

          # Login to Belvo API
          client = Client("Secret Key ID", "Secret Key PASSWORD", "sandbox")

          # Yearly Tax Returns
          tax_returns = client.TaxReturns.create(
            link="link_id",
            year_from="2019",
            year_to="2020",
            attach_pdf=True
          )

          # Monthly Tax Returns
          tax_returns = client.TaxReturns.create(
            link="link_id",
            date_from="2019-01-01",
            date_to="2019-04-01",
            attach_pdf=True,
            type_="monthly"
          )
      - language: ruby
        name: Belvo Ruby SDK
        code: |
          # check our Ruby gem on github
          # https://github.com/belvo-finance/belvo-ruby
          require 'belvo'

          sandbox = Belvo::Client.new(
            'Secret Key ID',
            'Secret Key PASSWORD',
            'sandbox'
          )

          # Yearly Tax Returns
          sandbox.tax_returns.retrieve(
            link: 'link-id',
            year_from: "2019",
            year_to: "2020"
          )

          # Monthly Tax Returns
          sandbox.tax_returns.retrieve(
            link: 'some-link-uuid',
            options: {
              type: TaxReturnType::MONTHLY,
              date_from: '2019-01-01',
              date_to: '2019-04-01',
            }
                )
      - language: node
        name: Belvo Node SDK
        code: |-
          // check our node package on github
          // https://github.com/belvo-finance/belvo-js

          var belvo = require('belvo').default;

          var client = new belvo(
            'Secret Key ID',
            'Secret Key PASSWORD',
            'sandbox'
          );

          // Yearly Tax Returns
          client.connect()
            .then(function () {
              client.taxReturns.retrieve('linkID', "2019", "2020")
                .then(function (res) {
                  console.log(res);
                })
                .catch(function (error) {
                  console.log(error);
                });
          });

          // Monthly Tax Returns

          client.connect()
            .then(function () {
              client.taxReturns.retrieve('linkID', "2019-01-01", "2019-04-01", {type: 'monthly'})
                .then(function (res) {
                  console.log(res);
                })
                .catch(function (error) {
                  console.log(error);
                });
          });
# patch:
#   tags:
#     - Tax returns
#   operationId: PatchTaxReturns
#   summary: Complete a tax returns request
#   description: >-
#     Used to resume an Tax return retrieve session that was paused because an MFA
#     token was required by the institution.
#   requestBody:
#     required: true
#     content:
#       application/json:
#         schema:
#           $ref: ../components/requestBodies/PatchBody.yaml
#   responses:
#     '200':
#       description: Ok (when `save_data=false`)
#       content:
#         application/json:
#           schema:
#             type: array
#             items:
#               oneOf: 
#                 - $ref: ../components/schemas/tax_returns/TaxReturnPersonal.yaml
#                 - $ref: ../components/schemas/tax_returns/TaxReturnPersonalMonthly.yaml
#                 - $ref: ../components/schemas/tax_returns/TaxReturnBusiness.yaml
#                 - $ref: ../components/schemas/tax_returns/TaxReturnBusinessMonthly.yaml
#     '201':
#       description: Created (when `save_data=true`)
#       content:
#         application/json:
#           schema:
#             type: array
#             items:
#               oneOf: 
#                 - $ref: ../components/schemas/tax_returns/TaxReturnPersonal.yaml
#                 - $ref: ../components/schemas/tax_returns/TaxReturnPersonalMonthly.yaml
#                 - $ref: ../components/schemas/tax_returns/TaxReturnBusiness.yaml
#                 - $ref: ../components/schemas/tax_returns/TaxReturnBusinessMonthly.yaml
#     '400':
#       description: Bad request error
#       content:
#         application/json:
#           schema:
#             type: array
#             items:
#               anyOf:
#               - $ref: ../components/errors/TooManySessionsError.yaml
#               - $ref: ../components/errors/SessionExpiredError.yaml
#               - $ref: ../components/errors/ValidationError.yaml
#               - $ref: ../components/errors/InstitutionDownError.yaml
#               - $ref: ../components/errors/InstitutionUnavailableError.yaml
#               - $ref: ../components/errors/InstitutionInactiveError.yaml
#               - $ref: ../components/errors/UnsupportedOperationError.yaml
#               - $ref: ../components/errors/InvalidLinkError.yaml
#               - $ref: ../components/errors/UnconfirmedLinkError.yaml
#     '401':
#       description: Authentication to Belvo API failed
#       content:
#         application/json:
#           schema:
#             type: array
#             description: >-
#               This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).
#             items:
#               $ref: ../components/errors/UnauthorizedError.yaml
#     '408':
#       description: Request Timeout
#       content:
#         application/json:
#           schema:
#             type: array
#             title: Request Timeout
#             description: >-
#               Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.
                
#             items:
#               $ref: ../components/errors/RequestTimeoutError.yaml
#     '428':
#       description: MFA Token Required
#       content:
#         application/json:
#           schema:
#             type: array
#             items:
#               $ref: ../components/responses/TokenRequiredResponse.yaml
#     '500':
#       description: Unexpected Error
#       content:
#         application/json:
#           schema:
#             type: array
#             title: Unexpected Error
#             description: >-
#               This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.
                
#             items:
#               $ref: ../components/errors/UnexpectedError.yaml
#   x-readme:
#     code-samples:
#       - language: cURL
#         code: |
#           curl -X PATCH \
#             https://api.belvo.com/api/tax-returns/ \
#             -H 'Content-Type: application/json' \
#             -H 'Host: api.belvo.com' \
#             -H 'cache-control: no-cache' \
#             -d '{
#                 "session": "",
#                 "token": "",
#                 "link": ""
#             }' \
#             -u [Secret Key ID]:[Secret Key PASSWORD]
#       - language: python
#         code: >
#           # check our python-client library on github

#           # https://github.com/belvo-finance/belvo-python

#           from belvo.client import Client


#           # Login to Belvo API

#           client = Client("Secret Key ID", "Secret Key PASSWORD",
#           "https://api.belvo.com")


#           # Resume Tax return

#           incomes = client.TaxReturns.resume(
#             session="session_id",
#             token="token",
#             link="link_id"
#           )
#       - language: ruby
#         name: Belvo Ruby SDK
#         code: |
#           # check our Ruby gem on github
#           # https://github.com/belvo-finance/belvo-ruby
#           require 'belvo'

#           client = Belvo::Client.new(
#             'Secret Key ID',
#             'Secret Key PASSWORD',
#             'https://api.belvo.com'
#           )

#           client.tax_returns.resume(
#             session: 'session_id',
#             token: 'token',
#             link: 'link_id'
#           )
#       - language: node
#         name: Belvo Node SDK
#         code: |
#           // check our node package on github
#           // https://github.com/belvo-finance/belvo-js

#           var belvo = require('belvo').default;

#           var client = new belvo(
#             'Secret Key ID',
#             'Secret Key PASSWORD',
#             'https://api.belvo.com'
#           );

#           client.connect()
#             .then(function () {
#               client.taxReturns.resume('sessionId', 'token', 'linkId')
#                 .then(function (res) {
#                   console.log(res);
#                 })
#                 .catch(function (error) {
#                   console.log(error);
#                 });
#           });