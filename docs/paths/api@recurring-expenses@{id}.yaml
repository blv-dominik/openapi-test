get:
  tags:
    - Recurring Expenses
  operationId: DetailRecurringExpense
  summary: Get a recurring expense's details
  description: Get the details of a specific recurring expense.
  parameters:
    - name: id
      in: path
      required: true
      description: The `recurring-expenses.id` you want to get detailed information about.
      schema:
        type: string
  responses:
    '200':
      description: Ok
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../components/schemas/recurring_expenses/RecurringExpenses.yaml
    '401':
      description: Authentication to Belvo API failed
      content:
        application/json:
          schema:
            type: array
            description: >-
              This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).
            items:
              $ref: ../components/errors/UnauthorizedError.yaml
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            type: array
            description: >-
              You made a request where you:

                - provided the wrong URL.
                - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.
                
            items:
              $ref: ../components/errors/NotFoundError.yaml
  x-readme:
      code-samples:
        - language: python
          name: Belvo Python SDK
          code: |
            # For more information about our SDKs go to:
            # https://developers.belvo.com/docs/belvo-sdks

            from belvo.client import Client

            # Login to Belvo API
            client = Client("Secret Key ID", "Secret Key PASSWORD", "sandbox")

            # Get Recurring Expense
            client.RecurringExpenses.get('recurring-expenses.id')

        - language: ruby
          name: Belvo Ruby SDK
          code: |
            # For more information about our SDKs go to:
            # https://developers.belvo.com/docs/belvo-sdks

            require 'belvo'

            sandbox = Belvo::Client.new(
              'Secret Key ID',
              'Secret Key PASSWORD',
              'sandbox'
            )

            sandbox.recurring_expenses.detail id: 'recurring-expenses.id'

        - language: node
          name: Belvo Node SDK
          code: |
            // For more information about our SDKs go to:
            // https://developers.belvo.com/docs/belvo-sdks

            var belvo = require('belvo').default;

            var client = new belvo(
              'Secret Key ID',
              'Secret Key PASSWORD',
              'sandbox'
            );

            client.connect()
              .then(function () {
                client.recurringExpenses.detail('recurring-expenses.id')
                  .then(function (res) {
                    console.log(res);
                  })
                  .catch(function (error) {
                    console.log(error);
                  });
            });


delete:
  tags:
    - Recurring Expenses
  operationId: DestroyRecurringExpense
  summary: Delete a recurring expense
  description: Delete a specific recurring expense from your Belvo account.
  parameters:
    - name: id
      in: path
      required: true
      description: The `recurring-expenses.id` that you want to delete
      schema:
        type: string
  responses:
    '204':
      description: No content
    '401':
      description: Authentication to Belvo API failed
      content:
        application/json:
          schema:
            type: array
            description: >-
              This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).
            items:
              $ref: ../components/errors/UnauthorizedError.yaml
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            type: array
            description: >-
              You made a request where you:

                - provided the wrong URL.
                - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.
                
            items:
              $ref: ../components/errors/NotFoundError.yaml
  x-readme:
      code-samples:
        - language: python
          name: Belvo Python SDK
          code: |
            # For more information about our SDKs go to:
            # https://developers.belvo.com/docs/belvo-sdks

            from belvo.client import Client

            # Login to Belvo API
            client = Client("Secret Key ID", "Secret Key PASSWORD", "sandbox")

            # Delete Tax compliance status
            client.RecurringExpenses.delete('recurring-expenses.id')

        - language: ruby
          name: Belvo Ruby SDK
          code: |
            # For more information about our SDKs go to:
            # https://developers.belvo.com/docs/belvo-sdks

            require 'belvo'

            sandbox = Belvo::Client.new(
              'Secret Key ID',
              'Secret Key PASSWORD',
              'sandbox'
            )

            sandbox.recurring_expenses.delete id: 'recurring-expenses.id'

        - language: node
          name: Belvo Node SDK
          code: |
            // For more information about our SDKs go to:
            // https://developers.belvo.com/docs/belvo-sdks

            var belvo = require('belvo').default;

            var client = new belvo(
              'Secret Key ID',
              'Secret Key PASSWORD',
              'sandbox'
            );

            client.connect()
              .then(function () {
                client.recurringExpenses.delete('recurring-expenses.id')
                  .then(function (res) {
                    console.log(res);
                  })
                  .catch(function (error) {
                    console.log(error);
                  });
            });
