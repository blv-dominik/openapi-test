get:
  tags:
    - Incomes
  operationId: ListIncomes
  summary: List all incomes
  description: >-
    Get a paginated list of all incomes in your Belvo account. By default, we return up to 100 results per page.
  parameters:
    - name: page
      required: false
      in: query
      description: A page number within the paginated result set.
      schema:
        type: integer
        format: int32
        example: 1
    - name: page_size
      required: false
      in: query
      description: |
        Indicates how many results to return per page. By default we return 100 results per page. 
    
        ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
      schema:
        type: integer
        format: int32
        default: 100
        minimum: 1
        maximum: 1000
        example: 100
    - name: account
      in: query
      description: |
        The `account.id` you want to filter by.

        ℹ️ We highly recommend adding the `account.id` filter in order to improve your performance.
      schema:
        type: string
        format: uuid
        example: 8848bd0c-9c7e-4f53-a732-ec896b11d4c4
    - name: account__in
      in: query
      description: Return incomes for these `account.id`s.
      schema:
        type: string
        example: 24ccab1d-3a86-4136-a6eb-e04bf52b356f,beb2b197-3cf7-428d-bef3-f415c0d57509
    - name: created_at__gt
      in: query
      description: Return incomes that were last updated in Belvo's database after this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).
      schema:
        type: string
        example: 2022-05-05
    - name: created_at__gte
      in: query
      description: Return incomes that were last updated in Belvo's database after or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).
      schema:
        type: string
        example: 2022-05-04
    - name: created_at__lt
      in: query
      description: Return incomes that were last updated in Belvo's database before this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).
      schema:
        type: string
        example: 2022-04-01
    - name: created_at__lte
      in: query
      description: Return incomes that were last updated in Belvo's database before or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).
      schema:
        type: string
        example: 2022-03-30
    - name: created_at__range
      in: query
      description: Return incomes that were last updated in Belvo's database between two dates (`YYYY-MM-DD` or full `ISO-8601` timestamp).
      schema:
        type: string
        example: 2022-03-03,2022-05-04
    - name: id
      in: query
      description: Return information only for this `income.id`.
      schema:
        type: string
        example: 73694155-b871-41ec-94e3-37d17ff62b5d
    - name: id__in
      in: query
      description: Return information only for these `income.id`s.
      schema:
        type: string
        example: 73694155-b871-41ec-94e3-37d17ff62b5d,40968d42-7d89-49e3-9931-78baa8e0544e
  responses:
    '200':
      description: Ok
      content:
        application/json:
          schema:
            $ref: ../components/responses/IncomesPaginatedResponse.yaml
    '401':
      description: Authentication to Belvo API failed
      content:
        application/json:
          schema:
            type: array
            description: >-
              This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).
            items:
              $ref: ../components/errors/UnauthorizedError.yaml
  x-readme:
    code-samples:
      - language: cURL
        code: |
          curl https://api.belvo.com/api/incomes/ \
            -u [Secret Key ID]:[Secret Key PASSWORD]
      - language: python
        code: >
          # check our python-client library on github

          # https://github.com/belvo-finance/belvo-python

          from pprint import pprint

          from belvo.client import Client


          # Login to Belvo API

          client = Client("Secret Key ID", "Secret Key PASSWORD",
          "https://api.belvo.com")


          # List incomes

          for income in client.Incomes.list():
              pprint(income)
      - language: ruby
        name: Belvo Ruby SDK
        code: |
          # check our Ruby gem on github
          # https://github.com/belvo-finance/belvo-ruby
          require 'belvo'

          client = Belvo::Client.new(
            'Secret Key ID',
            'Secret Key PASSWORD',
            'https://api.belvo.com'
          )

          client.incomes.list
      - language: node
        name: Belvo Node SDK
        code: |
          // check our node package on github
          // https://github.com/belvo-finance/belvo-js

          var belvo = require('belvo').default;

          var client = new belvo(
            'Secret Key ID',
            'Secret Key PASSWORD',
            'https://api.belvo.com'
          );

          client.connect()
            .then(function () {
              client.incomes.list()
                .then(function (res) {
                  console.log(res);
                })
                .catch(function (error) {
                  console.log(error);
                });
          });
post:
  tags:
    - Incomes
  operationId: RetrieveIncome
  summary: Retrieve incomes for a link
  description: >-
    Retrieve income insights for <b>checking and savings accounts</b> from a
    specific link. You can receive insights for a period of up to 365 days,
    depending on the transaction history available for each
    [bank](https://developers.belvo.com/docs/institution).
  parameters: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: ../components/requestBodies/IncomesRequest.yaml
  responses:
    '200':
      description: Ok (when `save_data=false`)
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../components/schemas/incomes/Income.yaml
    '201':
      description: Created (when `save_data=true`)
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../components/schemas/incomes/Income.yaml
    '400':
      description: Bad request error
      content:
        application/json:
          schema:
            type: array
            items:
              anyOf:
              - $ref: ../components/errors/TooManySessionsError.yaml
              - $ref: ../components/errors/SessionExpiredError.yaml
              - $ref: ../components/errors/ValidationError.yaml
              - $ref: ../components/errors/InstitutionDownError.yaml
              - $ref: ../components/errors/InstitutionUnavailableError.yaml
              - $ref: ../components/errors/InstitutionInactiveError.yaml
              - $ref: ../components/errors/UnsupportedOperationError.yaml
              - $ref: ../components/errors/InvalidLinkError.yaml
              - $ref: ../components/errors/UnconfirmedLinkError.yaml
              - $ref: ../components/errors/InvalidPeriodError.yaml
    '401':
      description: Authentication to Belvo API failed
      content:
        application/json:
          schema:
            type: array
            description: >-
              This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).
            items:
              $ref: ../components/errors/UnauthorizedError.yaml
    '408':
      description: Request Timeout
      content:
        application/json:
          schema:
            type: array
            title: Request Timeout
            description: >-
              Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.
                
            items:
              $ref: ../components/errors/RequestTimeoutError.yaml
    '428':
      description: MFA Token Required
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../components/responses/TokenRequiredResponse.yaml
    '500':
      description: Unexpected Error
      content:
        application/json:
          schema:
            type: array
            title: Unexpected Error
            description: >-
              This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.
                
            items:
              $ref: ../components/errors/UnexpectedError.yaml
  x-readme:
    code-samples:
      - language: cURL
        code: |
          curl -X POST \
            https://api.belvo.com/api/incomes/ \
            -H 'Content-Type: application/json' \
            -H 'Host: api.belvo.com' \
            -H 'cache-control: no-cache' \
            -d '{
              "link": ""
          }' \
            -u [Secret Key ID]:[Secret Key PASSWORD]
      - language: python
        code: >
          # check our python-client library on github

          # https://github.com/belvo-finance/belvo-python

          from belvo.client import Client


          # Login to Belvo API

          client = Client("Secret Key ID", "Secret Key PASSWORD",
          "https://api.belvo.com")


          # Retrieve incomes

          incomes = client.Incomes.create(
            link="link_id"
          )
      - language: ruby
        name: Belvo Ruby SDK
        code: |
          # check our Ruby gem on github
          # https://github.com/belvo-finance/belvo-ruby
          require 'belvo'

          client = Belvo::Client.new(
            'Secret Key ID',
            'Secret Key PASSWORD',
            'https://api.belvo.com'
          )

          client.incomes.retrieve link: 'link-id'
      - language: node
        name: Belvo Node SDK
        code: |
          // check our node package on github
          // https://github.com/belvo-finance/belvo-js

          var belvo = require('belvo').default;

          var client = new belvo(
            'Secret Key ID',
            'Secret Key PASSWORD',
            'https://api.belvo.com'
          );

          client.connect()
            .then(function () {
              client.incomes.retrieve('link-id')
                .then(function (res) {
                  console.log(res);
                })
                .catch(function (error) {
                  console.log(error);
                });
          });
patch:
  tags:
    - Incomes
  operationId: PatchIncomes
  summary: Complete an incomes request
  description: >-
    Used to resume an Income retrieve session that was paused because an MFA
    token was required by the institution.
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: ../components/requestBodies/PatchBody.yaml
  responses:
    '200':
      description: Ok (when `save_data=false`)
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../components/schemas/incomes/Income.yaml
    '201':
      description: Created (when `save_data=true`)
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../components/schemas/incomes/Income.yaml
    '400':
      description: Bad request error
      content:
        application/json:
          schema:
            type: array
            items:
              anyOf:
              - $ref: ../components/errors/TooManySessionsError.yaml
              - $ref: ../components/errors/SessionExpiredError.yaml
              - $ref: ../components/errors/ValidationError.yaml
              - $ref: ../components/errors/InstitutionDownError.yaml
              - $ref: ../components/errors/InstitutionUnavailableError.yaml
              - $ref: ../components/errors/InstitutionInactiveError.yaml
              - $ref: ../components/errors/UnsupportedOperationError.yaml
              - $ref: ../components/errors/InvalidLinkError.yaml
              - $ref: ../components/errors/UnconfirmedLinkError.yaml
    '401':
      description: Authentication to Belvo API failed
      content:
        application/json:
          schema:
            type: array
            description: >-
              This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).
            items:
              $ref: ../components/errors/UnauthorizedError.yaml
    '408':
      description: Request Timeout
      content:
        application/json:
          schema:
            type: array
            title: Request Timeout
            description: >-
              Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.
                
            items:
              $ref: ../components/errors/RequestTimeoutError.yaml
    '428':
      description: MFA Token Required
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../components/responses/TokenRequiredResponse.yaml
    '500':
      description: Unexpected Error
      content:
        application/json:
          schema:
            type: array
            title: Unexpected Error
            description: >-
              This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.
                
            items:
              $ref: ../components/errors/UnexpectedError.yaml
  x-readme:
    code-samples:
      - language: cURL
        code: |
          curl -X PATCH \
            https://api.belvo.com/api/incomes/ \
            -H 'Content-Type: application/json' \
            -H 'Host: api.belvo.com' \
            -H 'cache-control: no-cache' \
            -d '{
                "session": "",
                "token": "",
                "link": ""
            }' \
            -u [Secret Key ID]:[Secret Key PASSWORD]
      - language: python
        code: >
          # check our python-client library on github

          # https://github.com/belvo-finance/belvo-python

          from belvo.client import Client


          # Login to Belvo API

          client = Client("Secret Key ID", "Secret Key PASSWORD",
          "https://api.belvo.com")


          # Resume incomes

          incomes = client.Incomes.resume(
            session="session_id",
            token="token",
            link="link_id"
          )
      - language: ruby
        name: Belvo Ruby SDK
        code: |
          # check our Ruby gem on github
          # https://github.com/belvo-finance/belvo-ruby
          require 'belvo'

          client = Belvo::Client.new(
            'Secret Key ID',
            'Secret Key PASSWORD',
            'https://api.belvo.com'
          )

          client.incomes.resume(
            session: 'session_id',
            token: 'token',
            link: 'link_id'
          )
      - language: node
        name: Belvo Node SDK
        code: |
          // check our node package on github
          // https://github.com/belvo-finance/belvo-js

          var belvo = require('belvo').default;

          var client = new belvo(
            'Secret Key ID',
            'Secret Key PASSWORD',
            'https://api.belvo.com'
          );

          client.connect()
            .then(function () {
              client.incomes.resume('sessionId', 'token', 'linkId')
                .then(function (res) {
                  console.log(res);
                })
                .catch(function (error) {
                  console.log(error);
                });
          });
