get:
  tags:
    - Risk Insights
  operationId: ListRiskInsights
  summary: List all risk insights
  description: >-
    Get a paginated list of all risk insight analyses in your Belvo account. By default, we return up to 100 results per page.
  parameters:
    - name: page
      required: false
      in: query
      description: A page number within the paginated result set.
      schema:
        type: integer
        format: int32
        example: 1
    - name: page_size
      required: false
      in: query
      description: |
        Indicates how many results to return per page. By default we return 100 results per page. 
    
        ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
      schema:
        type: integer
        format: int32
        default: 100
        minimum: 1
        maximum: 1000
        example: 100
    - name: link
      in: query
      description: |
        The `link.id` you want to filter by.

        ℹ️ We highly recommend adding the `link.id` filter in order to improve your performance.
      schema:
        type: string
        format: uuid
        example: 8848bd0c-9c7e-4f53-a732-ec896b11d4c4
    - name: id
      in: query
      description: Return information for this `risk-insight.id`.
      schema:
        type: string
        example: eb42c21c-2d9e-4dc1-89b8-9401d4beca73
    - name: id__in
      in: query
      description: Return information for these `risk-insight.id`s.
      schema:
        type: string
        example: eb42c21c-2d9e-4dc1-89b8-9401d4beca73,82b3f18c-055b-4f82-9fae-d2201815ab0c
    - name: link__in
      in: query
      description: Return information for these `link.id`s.
      schema:
        type: string
        example: 8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65
  responses:
    '200':
      description: Ok
      content:
        application/json:
          schema:
            $ref: ../components/responses/RiskInsightsPaginatedResponse.yaml
    '401':
      description: Authentication to Belvo API failed
      content:
        application/json:
          schema:
            type: array
            description: >-
              This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).
            items:
              $ref: ../components/errors/UnauthorizedError.yaml
  x-code-samples:
    - lang: cURL
      source: |
        curl https://sandbox.belvo.com/api/risk-insights/ \
        -u [Secret Key ID]:[Secret Key PASSWORD]


    - lang: python
      source: |
        # For more information about our SDKs go to:
        # https://developers.belvo.com/docs/belvo-sdks

        from pprint import pprint
        from belvo.client import Client

        # Login to Belvo API
        client = Client("Secret Key ID", "Secret Key PASSWORD", "sandbox")

        # List Risk insights
        for risk_insight in client.RiskInsights.list():
        pprint(income)
    - lang: ruby
      source: |
        # For more information about our SDKs go to:
        # https://developers.belvo.com/docs/belvo-sdks

        require 'belvo'

        sandbox = Belvo::Client.new(
          'Secret Key ID',
          'Secret Key PASSWORD',
          'sandbox'
        )

        client.risk_insights.list

    - lang: javascript
      source: |
        // For more information about our SDKs go to:
        // https://developers.belvo.com/docs/belvo-sdks

        var belvo = require('belvo').default;

        var client = new belvo(
          'Secret Key ID',
          'Secret Key PASSWORD',
          'sandbox'
        );

        client.connect()
          .then(function () {
            client.riskInsights.list()
              .then(function (res) {
                console.log(res);
              })
              .catch(function (error) {
                console.log(error);
              });
        });
post:
  tags:
    - Risk Insights
  operationId: RetrieveRiskInsights
  summary: Retrieve risk insights for a link
  description: >-
    Request the risk insights for a given link ID.


    If you need to know the currency of the account, just do a GET Details to the accounts endpoint (using the ID you receive from the accounts response).
  parameters: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: ../components/requestBodies/StandardRequest.yaml
  responses:
    '200':
      description: Ok (when save_data=false)
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../components/schemas/risk_insights/RiskInsights.yaml
    '201':
      description: Created (when save_data=true)
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../components/schemas/risk_insights/RiskInsights.yaml
    '400':
      description: Bad request error
      content:
        application/json:
          schema:
            type: array
            items:
              anyOf:
              - $ref: ../components/errors/TooManySessionsError.yaml
              - $ref: ../components/errors/SessionExpiredError.yaml
              - $ref: ../components/errors/ValidationError.yaml
              - $ref: ../components/errors/InstitutionDownError.yaml
              - $ref: ../components/errors/InstitutionUnavailableError.yaml
              - $ref: ../components/errors/InstitutionInactiveError.yaml
              - $ref: ../components/errors/UnsupportedOperationError.yaml
              - $ref: ../components/errors/InvalidLinkError.yaml
              - $ref: ../components/errors/UnconfirmedLinkError.yaml
              - $ref: ../components/errors/InvalidPeriodError.yaml
    '401':
      description: Authentication to Belvo API failed
      content:
        application/json:
          schema:
            type: array
            description: >-
              This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).
            items:
              $ref: ../components/errors/UnauthorizedError.yaml
    '408':
      description: Request Timeout
      content:
        application/json:
          schema:
            type: array
            title: Request Timeout
            description: >-
              Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.
                
            items:
              $ref: ../components/errors/RequestTimeoutError.yaml
    '428':
      description: MFA Token Required
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../components/responses/TokenRequiredResponse.yaml
    '500':
      description: Unexpected Error
      content:
        application/json:
          schema:
            type: array
            title: Unexpected Error
            description: >-
              This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.
                
            items:
              $ref: ../components/errors/UnexpectedError.yaml
  x-code-samples:
    - lang: cURL
      source: |
        curl -X POST \
          https://sandbox.belvo.com/api/risk-insights/ \
          -H 'Content-Type: application/json' \
          -H 'Host: sandbox.belvo.com' \
          -H 'cache-control: no-cache' \
          -d '{
            "link": "link_id"
        }' \
          -u [Secret Key ID]:[Secret Key PASSWORD]

    - lang: python
      source: |
        # For more information about our SDKs go to:
        # https://developers.belvo.com/docs/belvo-sdks

        from belvo.client import Client

        # Login to Belvo API
        client = Client("Secret Key ID", "Secret Key PASSWORD", "sandbox")

        # Retrieve Risk insights
        client.RiskInsights.create('link-id')
    - lang: ruby
      source: |
        # For more information about our SDKs go to:
        # https://developers.belvo.com/docs/belvo-sdks

        require 'belvo'

        sandbox = Belvo::Client.new(
          'Secret Key ID',
          'Secret Key PASSWORD',
          'sandbox'
        )

        client.risk_insights.retrieve(
          link: 'link-id'
        )
    - lang: javascript
      source: |
        // For more information about our SDKs go to:
        // https://developers.belvo.com/docs/belvo-sdks

        var belvo = require('belvo').default;

        var client = new belvo(
          'Secret Key ID',
          'Secret Key PASSWORD',
          'sandbox'
        );

        client.connect()
          .then(function () {
            client.riskInsights.retrieve('linkID')
              .then(function (res) {
                console.log(res);
              })
              .catch(function (error) {
                console.log(error);
              });
        });
patch:
  tags:
    - Risk Insights
  operationId: PatchRiskInsights
  summary: Complete a risk insights request
  description: >-
    Used to resume an Risk insights retrieve session that was paused because an MFA
    token was required by the institution.
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: ../components/requestBodies/PatchBody.yaml
  responses:
    '200':
      description: Ok (when save_data=false)
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../components/schemas/risk_insights/RiskInsights.yaml
    '201':
      description: Created (when save_data=true)
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../components/schemas/risk_insights/RiskInsights.yaml
    '400':
      description: Bad request error
      content:
        application/json:
          schema:
            type: array
            items:
              anyOf:
              - $ref: ../components/errors/TooManySessionsError.yaml
              - $ref: ../components/errors/SessionExpiredError.yaml
              - $ref: ../components/errors/ValidationError.yaml
              - $ref: ../components/errors/InstitutionDownError.yaml
              - $ref: ../components/errors/InstitutionUnavailableError.yaml
              - $ref: ../components/errors/InstitutionInactiveError.yaml
              - $ref: ../components/errors/UnsupportedOperationError.yaml
              - $ref: ../components/errors/InvalidLinkError.yaml
              - $ref: ../components/errors/UnconfirmedLinkError.yaml
    '401':
      description: Authentication to Belvo API failed
      content:
        application/json:
          schema:
            type: array
            description: >-
              This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).
            items:
              $ref: ../components/errors/UnauthorizedError.yaml
    '408':
      description: Request Timeout
      content:
        application/json:
          schema:
            type: array
            title: Request Timeout
            description: >-
              Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.
                
            items:
              $ref: ../components/errors/RequestTimeoutError.yaml
    '428':
      description: MFA Token Required
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../components/responses/TokenRequiredResponse.yaml
    '500':
      description: Unexpected Error
      content:
        application/json:
          schema:
            type: array
            title: Unexpected Error
            description: >-
              This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.
                
            items:
              $ref: ../components/errors/UnexpectedError.yaml
  x-code-samples:
    - lang: cURL
      source: |
        curl -X PATCH \
        https://sandbox.belvo.com/api/risk-insights/ \
        -H 'Content-Type: application/json' \
        -H 'Host: sandbox.belvo.com' \
        -H 'cache-control: no-cache' \
        -d '{
            "session": "",
            "token": "",
            "link": ""
        }' \
        -u [Secret Key ID]:[Secret Key PASSWORD]

    - lang: python
      source: |
        # For more information about our SDKs go to:
        # https://developers.belvo.com/docs/belvo-sdks

        from belvo.client import Client

        # Login to Belvo API
        client = Client("Secret Key ID", "Secret Key PASSWORD", "sandbox")

        # Resume Risk insights
        risk_insights = client.RiskInsights.resume(
          session="session_id",
          token="token",
          link="link_id"
        )
    - lang: ruby
      source: |
        # For more information about our SDKs go to:
            # https://developers.belvo.com/docs/belvo-sdks

            require 'belvo'

            client = Belvo::Client.new(
              'Secret Key ID',
              'Secret Key PASSWORD',
              'sandbox'
            )

            client.risk_insights.resume(
              session: 'session_id',
              token: 'token',
              link: 'link_id'
            )
    - lang: javascript
      source: |
        // For more information about our SDKs go to:
        // https://developers.belvo.com/docs/belvo-sdks

        var belvo = require('belvo').default;

        var client = new belvo(
          'Secret Key ID',
          'Secret Key PASSWORD',
          'sandbox'
        );

        client.connect()
          .then(function () {
            client.riskInsights.resume('sessionId', 'token', 'linkId')
              .then(function (res) {
                console.log(res);
              })
              .catch(function (error) {
                console.log(error);
              });
        });
