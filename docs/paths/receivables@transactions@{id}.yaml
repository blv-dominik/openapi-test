get:
  tags:
    - Receivable Transactions
  operationId: DetailReceivableTransaction
  summary: Get a receivable transaction's details
  description: Get the details of a specific receivable transaction.
  parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: The `transaction.id` you want to get detailed information about.
  responses:
    '200':
      description: Ok
      content:
        application/json:
          schema:
            $ref: ../components/schemas/receivables/ReceivablesTransaction.yaml
    '401':
        description: Authentication to Belvo API failed
        content:
          application/json:
            schema:
              $ref: ../components/errors/UnauthorizedError.yaml
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            type: array
            description: >-
              You made a request where you:

                - provided the wrong URL.
                - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.
                
            items:
              $ref: ../components/errors/NotFoundError.yaml
  # x-readme:
  #     code-samples:
  #       - language: python
  #         name: Belvo Python SDK
  #         code: |
  #           # For more information about our SDKs go to:
  #           # https://developers.belvo.com/docs/belvo-sdks

  #           from belvo.client import Client

  #           # Login to Belvo API
  #           client = Client("Secret Key ID", "Secret Key PASSWORD", "sandbox")

  #           # Get Receivable Transactions
  #           client.RecevableTransactions.get('investments-transactions.id')

  #       - language: ruby
  #         name: Belvo Ruby SDK
  #         code: |
  #           # For more information about our SDKs go to:
  #           # https://developers.belvo.com/docs/belvo-sdks

  #           require 'belvo'

  #           sandbox = Belvo::Client.new(
  #             'Secret Key ID',
  #             'Secret Key PASSWORD',
  #             'sandbox'
  #           )

  #           sandbox.investments_transaction.detail id: 'investments-transaction.id'

  #       - language: node
  #         name: Belvo Node SDK
  #         code: |
  #           // For more information about our SDKs go to:
  #           // https://developers.belvo.com/docs/belvo-sdks

  #           var belvo = require('belvo').default;

  #           var client = new belvo(
  #             'Secret Key ID',
  #             'Secret Key PASSWORD',
  #             'sandbox'
  #           );

  #           client.connect()
  #             .then(function () {
  #               client.RecevableTransactions.detail('investments-transaction.id')
  #                 .then(function (res) {
  #                   console.log(res);
  #                 })
  #                 .catch(function (error) {
  #                   console.log(error);
  #                 });
  #           });
delete:
  tags:
    - Receivable Transactions
  operationId: DestroyReceivableTransaction
  summary: Delete a receivable transaction
  description: >-
    Delete a specific receivable transaction from your Belvo account.
  parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: The `transaction.id` that you want to delete.
  responses:
    '204':
      description: No content
    '401':
      description: Authentication to Belvo API failed
      content:
        application/json:
          schema:
            type: array
            description: >-
              This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).
            items:
              $ref: ../components/errors/UnauthorizedError.yaml
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            type: array
            description: >-
              You made a request where you:

                - provided the wrong URL.
                - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.
                
            items:
              $ref: ../components/errors/NotFoundError.yaml
  # x-readme:
  #     code-samples:
  #       - language: python
  #         name: Belvo Python SDK
  #         code: |
  #           # For more information about our SDKs go to:
  #           # https://developers.belvo.com/docs/belvo-sdks

  #           from belvo.client import Client

  #           # Login to Belvo API
  #           client = Client("Secret Key ID", "Secret Key PASSWORD", "sandbox")

  #           # Delete Investment Portfolio
  #           client.RecevableTransactions.delete('investment-transaction.id')

  #       - language: ruby
  #         name: Belvo Ruby SDK
  #         code: |
  #           # For more information about our SDKs go to:
  #           # https://developers.belvo.com/docs/belvo-sdks

  #           require 'belvo'

  #           sandbox = Belvo::Client.new(
  #             'Secret Key ID',
  #             'Secret Key PASSWORD',
  #             'sandbox'
  #           )

  #           sandbox.investments_transaction.delete id: 'investment-transaction.id'

  #       - language: node
  #         name: Belvo Node SDK
  #         code: |
  #           // For more information about our SDKs go to:
  #           // https://developers.belvo.com/docs/belvo-sdks

  #           var belvo = require('belvo').default;

  #           var client = new belvo(
  #             'Secret Key ID',
  #             'Secret Key PASSWORD',
  #             'sandbox'
  #           );

  #           client.connect()
  #             .then(function () {
  #               client.RecevableTransactions.delete('investment-transaction.id')
  #                 .then(function (res) {
  #                   console.log(res);
  #                 })
  #                 .catch(function (error) {
  #                   console.log(error);
  #                 });
  #           });
